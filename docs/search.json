[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/rinuthomas/Documents/PracticumII/rinuthomas_P2_portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             8     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 EyeColor              0             1   4   5     0        3          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 2, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean    sd  p0   p25  p50   p75 p100\n1 Height                0             1 170.  11.0  154 164.  170. 178.   183\n2 Weight                0             1  73.2 20.4   50  55    73   82.5  110\n3 WaistSize             0             1  32.2  3.33  28  29.8  32   34.2   38\n  hist \n1 ▅▁▅▂▇\n2 ▇▂▅▂▂\n3 ▇▅▂▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\np5 &lt;- mydata %&gt;% ggplot(aes(x = EyeColor, y = Height, fill = EyeColor)) +\n  geom_boxplot() +\n  labs(x = \"Eye Color\", y = \"Height\") +\n  theme_minimal()\nplot(p5)\n\n\n\n\n\n\n\nfigure_file &lt;- here(\"starter-analysis-exercise\", \"results\", \"figures\", \"eye-color-height-boxplot.png\")\nggsave(filename = figure_file, plot = p5, width = 8, height = 6)\n\n\np6 &lt;- mydata %&gt;% ggplot(aes(x = Weight, y = WaistSize)) +\n  geom_point() +\n  labs(x = \"Weight\", y = \"Waist Size\") +\n  theme_minimal()\nplot(p6)\n\n\n\n\n\n\n\nfigure_file &lt;- here(\"starter-analysis-exercise\", \"results\", \"figures\", \"weight-waist-scatter.png\")\nggsave(filename = figure_file, plot = p6, width = 8, height = 6)\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "Assignment #5: CDC Data Exercise",
    "section": "",
    "text": "Dataset Name: NCHS - Death Rates and Life Expectancy at Birth\nThis dataset provides an annual data on death rates and life expectancy at birth in the United States, offering key indicator for public health analysis.\nKey variables:\nYear: The specific year of the data\nRace: Black or White\nSex: Male or Female\nAverage Life Expectancy (Years): The average number of years a newborn is expected to live.\nAge-adjusted Death Rate: The number of deaths per 100,000 population."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#load-necessary-packages",
    "href": "cdcdata-exercise/cdcdata-exercise.html#load-necessary-packages",
    "title": "Assignment #5: CDC Data Exercise",
    "section": "Load necessary packages",
    "text": "Load necessary packages\n\n# Load necessary packages\nlibrary (here)\n\nhere() starts at /Users/rinuthomas/Documents/PracticumII/rinuthomas_P2_portfolio\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#read-and-load-the-dataset",
    "href": "cdcdata-exercise/cdcdata-exercise.html#read-and-load-the-dataset",
    "title": "Assignment #5: CDC Data Exercise",
    "section": "Read and Load the dataset",
    "text": "Read and Load the dataset\n\n# Define data location using here() package\ndata_location = here::here(\"cdcdata-exercise\",\"NCHS_-_Death_rates_and_life_expectancy_at_birth.csv\")\n\n# Load Data\ncdc_data = read_csv(data_location)\n\nRows: 1071 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Race, Sex\ndbl (3): Year, Average Life Expectancy (Years), Age-adjusted Death Rate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(cdc_data)\n\n# A tibble: 6 × 5\n   Year Race      Sex        Average Life Expectancy (Y…¹ Age-adjusted Death R…²\n  &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;                             &lt;dbl&gt;                  &lt;dbl&gt;\n1  1900 All Races Both Sexes                         47.3                  2518 \n2  1901 All Races Both Sexes                         49.1                  2473.\n3  1902 All Races Both Sexes                         51.5                  2301.\n4  1903 All Races Both Sexes                         50.5                  2379 \n5  1904 All Races Both Sexes                         47.6                  2502.\n6  1905 All Races Both Sexes                         48.7                  2424.\n# ℹ abbreviated names: ¹​`Average Life Expectancy (Years)`,\n#   ²​`Age-adjusted Death Rate`\n\nstr(cdc_data)\n\nspc_tbl_ [1,071 × 5] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                           : num [1:1071] 1900 1901 1902 1903 1904 ...\n $ Race                           : chr [1:1071] \"All Races\" \"All Races\" \"All Races\" \"All Races\" ...\n $ Sex                            : chr [1:1071] \"Both Sexes\" \"Both Sexes\" \"Both Sexes\" \"Both Sexes\" ...\n $ Average Life Expectancy (Years): num [1:1071] 47.3 49.1 51.5 50.5 47.6 48.7 48.7 47.6 51.1 52.1 ...\n $ Age-adjusted Death Rate        : num [1:1071] 2518 2473 2301 2379 2502 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   Race = col_character(),\n  ..   Sex = col_character(),\n  ..   `Average Life Expectancy (Years)` = col_double(),\n  ..   `Age-adjusted Death Rate` = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n# View the column names\nprint(colnames(cdc_data))\n\n[1] \"Year\"                            \"Race\"                           \n[3] \"Sex\"                             \"Average Life Expectancy (Years)\"\n[5] \"Age-adjusted Death Rate\""
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#renamed-the-columns",
    "href": "cdcdata-exercise/cdcdata-exercise.html#renamed-the-columns",
    "title": "Assignment #5: CDC Data Exercise",
    "section": "Renamed the columns",
    "text": "Renamed the columns\nThe column names were too long so in order to make referencing the column name while coding I renamed two columns as shown in the code below\n\n # Rename columns to avoid issues with spaces or special characters\ncdc_data = cdc_data %&gt;%\n  rename(\n    DeathRate = `Age-adjusted Death Rate`,\n    LifeExpectancy = `Average Life Expectancy (Years)`\n  )"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#filter-the-data",
    "href": "cdcdata-exercise/cdcdata-exercise.html#filter-the-data",
    "title": "Assignment #5: CDC Data Exercise",
    "section": "Filter the Data",
    "text": "Filter the Data\nThe dataset had information from 1900 to 2018. Hence, I chose years 1993 through 2018.\n\n# Filter the data\nfiltered_cdc_data &lt;- cdc_data %&gt;%\n  filter(Year &gt;= 1993 & Year &lt;= 2018, \n         Race %in% c(\"Black\", \"White\"), \n         Sex %in% c(\"Male\", \"Female\"))\n\n\n# DIsplay Structure of the filtered data\nstr(filtered_cdc_data)\n\nspc_tbl_ [104 × 5] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year          : num [1:104] 1993 1994 1995 1996 1997 ...\n $ Race          : chr [1:104] \"Black\" \"Black\" \"Black\" \"Black\" ...\n $ Sex           : chr [1:104] \"Female\" \"Female\" \"Female\" \"Female\" ...\n $ LifeExpectancy: num [1:104] 73.7 73.9 73.9 74.2 74.7 74.8 74.7 75.1 75.3 75.4 ...\n $ DeathRate     : num [1:104] 969 954 956 940 922 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   Race = col_character(),\n  ..   Sex = col_character(),\n  ..   `Average Life Expectancy (Years)` = col_double(),\n  ..   `Age-adjusted Death Rate` = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nThere were a few columns with missing values, those were removed as shown below\n\n# Remove rows with missing values\ncleaned_cdc_data = filtered_cdc_data %&gt;%\n  na.omit()\n\nstr(cleaned_cdc_data)\n\ntibble [100 × 5] (S3: tbl_df/tbl/data.frame)\n $ Year          : num [1:100] 1993 1994 1995 1996 1997 ...\n $ Race          : chr [1:100] \"Black\" \"Black\" \"Black\" \"Black\" ...\n $ Sex           : chr [1:100] \"Female\" \"Female\" \"Female\" \"Female\" ...\n $ LifeExpectancy: num [1:100] 73.7 73.9 73.9 74.2 74.7 74.8 74.7 75.1 75.3 75.4 ...\n $ DeathRate     : num [1:100] 969 954 956 940 922 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:4] 26 52 78 104\n  ..- attr(*, \"names\")= chr [1:4] \"26\" \"52\" \"78\" \"104\""
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#summarize-character-variables",
    "href": "cdcdata-exercise/cdcdata-exercise.html#summarize-character-variables",
    "title": "Assignment #5: CDC Data Exercise",
    "section": "Summarize character variables:",
    "text": "Summarize character variables:\nFirst let’s summarize race\n\n# Summary statistics for Race\nrace_summary = cleaned_cdc_data %&gt;%\n  group_by(Race) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count)) * 100)\n\nprint(race_summary)\n\n# A tibble: 2 × 3\n  Race  count percentage\n  &lt;chr&gt; &lt;int&gt;      &lt;dbl&gt;\n1 Black    50         50\n2 White    50         50\n\n\nthen let’s summarize sex\n\n# Summary statistics for Sex\nsex_summary = cleaned_cdc_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count)) * 100)\n\nprint(sex_summary)\n\n# A tibble: 2 × 3\n  Sex    count percentage\n  &lt;chr&gt;  &lt;int&gt;      &lt;dbl&gt;\n1 Female    50         50\n2 Male      50         50"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Introduction:\nMy name is Rinu Thomas. I am currently working as Information Security Advisor at USAA. I have my bachelor’s in Information Systems and Cyber security. I am currently pursuing my Master’s in Data Analytics.\n\n\nExperience in Data Analysis:\nI have academic experience in descriptive statistics, inferential statistics and regression analysis, clustering, natural language processing. I have worked with Python, R and SQL in my bachelor’s and previous classes taken for this course. One of the recent data analysis I was part of had to do with analyzing how laptop prices are influenced by various features such as storage capacity, pixels, battery life etc.\n\n\nResearch interest:\nMainly I am interested in learning how to create dynamic and interactive dashboards that allow users to explore data visually. As I learn more about data analysis through this course I am interested in developing models to quantify and prioritize cyber security risk based on data-driven analysis.\n\n\nInteresting thing about me:\nI have over 10 years of training in Karnatic music.\n\n\nAn interesting website to checkout:\nOurWorldinChart provides research and data visualizations about the world’s largest problems. It’s a great resource for seeing how data can be used to understand and address global issues."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "#load necessary packages\nlibrary(\"dslabs\")\nlibrary(\"dplyr\")\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(\"ggplot2\")\n\n#look at help file for gapminder data\nhelp(gapminder)\n\n\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\n\n#get a summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\n\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\n\n\n\n\n# Assigning only the African countries to a new object/variable called africadata\nafricadata &lt;- gapminder %&gt;% filter(continent == \"Africa\")\n\n\n# Display the structure of the new object\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n\n\n# Display the summary of the new object\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\n\n\n# Creating a new object containing only 'infant_mortality' and 'life_expectancy'\ninfant_life_expectancy &lt;- africadata %&gt;% select(infant_mortality, life_expectancy)\n\n# Creating a new object containing only 'population' and 'life_expectancy'\npopulation_life_expectancy &lt;- africadata %&gt;% select(population, life_expectancy)\n\n\n# Display the structure of the 'infant_life_expectancy' object\nstr(infant_life_expectancy)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\n# Display the summary of the 'infant_life_expectancy' object\nsummary(infant_life_expectancy)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n\n\n# Display the structure of the 'population_life_expectancy' object\nstr(population_life_expectancy)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\n# Display the summary of the 'population_life' object\nsummary(population_life_expectancy)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n\n\n\n\n\n\n# Creating the plot for life expectancy as a function of infant mortality\nggplot(data = infant_life_expectancy, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  labs(title = \"Life Expectancy vs Infant Mortality\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n# Creating the plot for life expectancy as a function of population size with x-axis log scale\nggplot(data = population_life_expectancy, aes(x = population, y = life_expectancy)) +\n  geom_point() +\n  scale_x_log10() +\n  labs(title = \"Life Expectancy vs Population Size (Log Scale)\",\n       x = \"Population (Log Scale)\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Identifying years with missing data for infant mortality\nmissing_infant_mortality &lt;- africadata %&gt;%\n  filter(is.na(infant_mortality)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(missing_count = n())\n\n# Display the years with missing data for infant mortality\nprint(missing_infant_mortality)\n\n# A tibble: 23 × 2\n    year missing_count\n   &lt;int&gt;         &lt;int&gt;\n 1  1960            10\n 2  1961            17\n 3  1962            16\n 4  1963            16\n 5  1964            15\n 6  1965            14\n 7  1966            13\n 8  1967            11\n 9  1968            11\n10  1969             7\n# ℹ 13 more rows\n\n\n\n# Extracting data for the year 2000\nafricadata_2000 &lt;- africadata %&gt;% filter(year == 2000)\n\n# Display the structure of the new object\nstr(africadata_2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n\n\n# Display the summary of the new object\nsummary(africadata_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\n\n\n\n\n# Creating the plot for life expectancy as a function of infant mortality for the year 2000\nggplot(data = africadata_2000, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  labs(title = \"Life Expectancy vs Infant Mortality (Year 2000)\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n# Create the plot for life expectancy as a function of population size for the year 2000 with x-axis log scale\nggplot(data = africadata_2000, aes(x = population, y = life_expectancy)) +\n  geom_point() +\n  scale_x_log10() +\n  labs(title = \"Life Expectancy vs Population Size (Log Scale, Year 2000)\",\n       x = \"Population (Log Scale)\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nObservations:\n\nThere is a negative correlation between infant mortality and life expectancy.\nThere is positive correlation between population size and life expectancy.\nThe streaks of data mainly due to different years for individual countries.\n\n\n\n\n\n# Fit a linear model with life expectancy as the outcome and infant mortality as the predictor\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = africadata_2000)\n\n# Display the summary of the first fit\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n\nFit 1 Summary:\nThe p-value is lower than the significance level of 0.05, which indicates a statistically significant negative correlation between infant mortality and life expectancy.\n\n# Fit a linear model with life expectancy as the outcome and population size as the predictor (log scale)\nfit2 &lt;- lm(life_expectancy ~ log(population), data = africadata_2000)\n\n# Display the summary of the second fit\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ log(population), data = africadata_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      65.3243    12.5203   5.217 3.65e-06 ***\nlog(population)  -0.5711     0.7943  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755\n\n\nFit 2 Summary:\nThe p-value is higher than the significance level of 0.05, which indicates that there is no statistically significant correlation between population size (log scale) and life expectancy.\nThis section is contributed by SAVANNA TORRES ## More data exploration\n\n#help file for us contagious diseases data\nhelp(\"us_contagious_diseases\")\n\n\n#get an overview of data structure\nstr(us_contagious_diseases)\n\n'data.frame':   16065 obs. of  6 variables:\n $ disease        : Factor w/ 7 levels \"Hepatitis A\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ state          : Factor w/ 51 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ year           : num  1966 1967 1968 1969 1970 ...\n $ weeks_reporting: num  50 49 52 49 51 51 45 45 45 46 ...\n $ count          : num  321 291 314 380 413 378 342 467 244 286 ...\n $ population     : num  3345787 3364130 3386068 3412450 3444165 ...\n\n\n\n#get a summary of data\nsummary(us_contagious_diseases)\n\n        disease            state            year      weeks_reporting\n Hepatitis A:2346   Alabama   :  315   Min.   :1928   Min.   : 0.00  \n Measles    :3825   Alaska    :  315   1st Qu.:1950   1st Qu.:31.00  \n Mumps      :1785   Arizona   :  315   Median :1975   Median :46.00  \n Pertussis  :2856   Arkansas  :  315   Mean   :1971   Mean   :37.38  \n Polio      :2091   California:  315   3rd Qu.:1990   3rd Qu.:50.00  \n Rubella    :1887   Colorado  :  315   Max.   :2011   Max.   :52.00  \n Smallpox   :1275   (Other)   :14175                                 \n     count          population      \n Min.   :     0   Min.   :   86853  \n 1st Qu.:     7   1st Qu.: 1018755  \n Median :    69   Median : 2749249  \n Mean   :  1492   Mean   : 4107584  \n 3rd Qu.:   525   3rd Qu.: 4996229  \n Max.   :132342   Max.   :37607525  \n                  NA's   :214       \n\n\n\n#determine the type of object us contagious diseases is\nclass(us_contagious_diseases)\n\n[1] \"data.frame\"\n\n\n\n\n\n\n# Assigning only Hepatitis A to a new object/variable called Hepatitis_A_data\nHepatitis_A_data &lt;- us_contagious_diseases %&gt;% filter(disease == \"Hepatitis A\")\n\n\n#get an overview of Hepatitis A data\nstr(Hepatitis_A_data)\n\n'data.frame':   2346 obs. of  6 variables:\n $ disease        : Factor w/ 7 levels \"Hepatitis A\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ state          : Factor w/ 51 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ year           : num  1966 1967 1968 1969 1970 ...\n $ weeks_reporting: num  50 49 52 49 51 51 45 45 45 46 ...\n $ count          : num  321 291 314 380 413 378 342 467 244 286 ...\n $ population     : num  3345787 3364130 3386068 3412450 3444165 ...\n\n\n\n# Summary of the new object Hepatitis_A_data\nsummary(Hepatitis_A_data)\n\n        disease            state           year      weeks_reporting\n Hepatitis A:2346   Alabama   :  46   Min.   :1966   Min.   : 0.00  \n Measles    :   0   Alaska    :  46   1st Qu.:1977   1st Qu.:33.00  \n Mumps      :   0   Arizona   :  46   Median :1988   Median :41.00  \n Pertussis  :   0   Arkansas  :  46   Mean   :1988   Mean   :38.72  \n Polio      :   0   California:  46   3rd Qu.:2000   3rd Qu.:48.00  \n Rubella    :   0   Colorado  :  46   Max.   :2011   Max.   :52.00  \n Smallpox   :   0   (Other)   :2070                                 \n     count           population      \n Min.   :    0.0   Min.   :  268476  \n 1st Qu.:   39.0   1st Qu.: 1226466  \n Median :  138.5   Median : 3294476  \n Mean   :  416.2   Mean   : 4894048  \n 3rd Qu.:  418.5   3rd Qu.: 5771780  \n Max.   :10821.0   Max.   :37607525  \n                                     \n\n\n\n\n\n\n# Creating the plot for count as a function of infant mortality for the year 2000\nggplot(data = Hepatitis_A_data, aes(x = population, y = count)) +\n  geom_point() +\n  labs(title = \"Hepatitis A Cases vs Population\",\n       x = \"population\",\n       y = \"count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Fit a linear model with life expectancy as the outcome and infant mortality as the predictor\nhepA_lm &lt;- lm(count ~ population, data = Hepatitis_A_data)\n\n# Display the summary of the first fit\nsummary(hepA_lm)\n\n\nCall:\nlm(formula = count ~ population, data = Hepatitis_A_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3050.0  -265.8   -52.3   107.2  9174.3 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -4.181e+00  1.971e+01  -0.212    0.832    \npopulation   8.589e-05  2.692e-06  31.906   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 709.8 on 2344 degrees of freedom\nMultiple R-squared:  0.3028,    Adjusted R-squared:  0.3025 \nF-statistic:  1018 on 1 and 2344 DF,  p-value: &lt; 2.2e-16\n\n\nObservation: We see that population is highly statistically significant and can conclude that it is a strong predictor of the number of Hepatitis A cases. Based off of the R-square value of 0.3028, we can say about 30.28% of the variability in the number of Hepatitis A cases can be explained by the population."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#loading-and-checking-data",
    "href": "coding-exercise/coding-exercise.html#loading-and-checking-data",
    "title": "R Coding Exercise",
    "section": "",
    "text": "#load necessary packages\nlibrary(\"dslabs\")\nlibrary(\"dplyr\")\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(\"ggplot2\")\n\n#look at help file for gapminder data\nhelp(gapminder)\n\n\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\n\n#get a summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\n\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data",
    "href": "coding-exercise/coding-exercise.html#processing-data",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Assigning only the African countries to a new object/variable called africadata\nafricadata &lt;- gapminder %&gt;% filter(continent == \"Africa\")\n\n\n# Display the structure of the new object\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n\n\n# Display the summary of the new object\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\n\n\n# Creating a new object containing only 'infant_mortality' and 'life_expectancy'\ninfant_life_expectancy &lt;- africadata %&gt;% select(infant_mortality, life_expectancy)\n\n# Creating a new object containing only 'population' and 'life_expectancy'\npopulation_life_expectancy &lt;- africadata %&gt;% select(population, life_expectancy)\n\n\n# Display the structure of the 'infant_life_expectancy' object\nstr(infant_life_expectancy)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\n# Display the summary of the 'infant_life_expectancy' object\nsummary(infant_life_expectancy)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n\n\n# Display the structure of the 'population_life_expectancy' object\nstr(population_life_expectancy)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\n# Display the summary of the 'population_life' object\nsummary(population_life_expectancy)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting",
    "href": "coding-exercise/coding-exercise.html#plotting",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Creating the plot for life expectancy as a function of infant mortality\nggplot(data = infant_life_expectancy, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  labs(title = \"Life Expectancy vs Infant Mortality\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n# Creating the plot for life expectancy as a function of population size with x-axis log scale\nggplot(data = population_life_expectancy, aes(x = population, y = life_expectancy)) +\n  geom_point() +\n  scale_x_log10() +\n  labs(title = \"Life Expectancy vs Population Size (Log Scale)\",\n       x = \"Population (Log Scale)\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#more-data-processing",
    "href": "coding-exercise/coding-exercise.html#more-data-processing",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Identifying years with missing data for infant mortality\nmissing_infant_mortality &lt;- africadata %&gt;%\n  filter(is.na(infant_mortality)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(missing_count = n())\n\n# Display the years with missing data for infant mortality\nprint(missing_infant_mortality)\n\n# A tibble: 23 × 2\n    year missing_count\n   &lt;int&gt;         &lt;int&gt;\n 1  1960            10\n 2  1961            17\n 3  1962            16\n 4  1963            16\n 5  1964            15\n 6  1965            14\n 7  1966            13\n 8  1967            11\n 9  1968            11\n10  1969             7\n# ℹ 13 more rows\n\n\n\n# Extracting data for the year 2000\nafricadata_2000 &lt;- africadata %&gt;% filter(year == 2000)\n\n# Display the structure of the new object\nstr(africadata_2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n\n\n# Display the summary of the new object\nsummary(africadata_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#more-plotting",
    "href": "coding-exercise/coding-exercise.html#more-plotting",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Creating the plot for life expectancy as a function of infant mortality for the year 2000\nggplot(data = africadata_2000, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  labs(title = \"Life Expectancy vs Infant Mortality (Year 2000)\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n# Create the plot for life expectancy as a function of population size for the year 2000 with x-axis log scale\nggplot(data = africadata_2000, aes(x = population, y = life_expectancy)) +\n  geom_point() +\n  scale_x_log10() +\n  labs(title = \"Life Expectancy vs Population Size (Log Scale, Year 2000)\",\n       x = \"Population (Log Scale)\",\n       y = \"Life Expectancy\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nObservations:\n\nThere is a negative correlation between infant mortality and life expectancy.\nThere is positive correlation between population size and life expectancy.\nThe streaks of data mainly due to different years for individual countries."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#simple-fit-model",
    "href": "coding-exercise/coding-exercise.html#simple-fit-model",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Fit a linear model with life expectancy as the outcome and infant mortality as the predictor\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = africadata_2000)\n\n# Display the summary of the first fit\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n\nFit 1 Summary:\nThe p-value is lower than the significance level of 0.05, which indicates a statistically significant negative correlation between infant mortality and life expectancy.\n\n# Fit a linear model with life expectancy as the outcome and population size as the predictor (log scale)\nfit2 &lt;- lm(life_expectancy ~ log(population), data = africadata_2000)\n\n# Display the summary of the second fit\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ log(population), data = africadata_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      65.3243    12.5203   5.217 3.65e-06 ***\nlog(population)  -0.5711     0.7943  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755\n\n\nFit 2 Summary:\nThe p-value is higher than the significance level of 0.05, which indicates that there is no statistically significant correlation between population size (log scale) and life expectancy.\nThis section is contributed by SAVANNA TORRES ## More data exploration\n\n#help file for us contagious diseases data\nhelp(\"us_contagious_diseases\")\n\n\n#get an overview of data structure\nstr(us_contagious_diseases)\n\n'data.frame':   16065 obs. of  6 variables:\n $ disease        : Factor w/ 7 levels \"Hepatitis A\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ state          : Factor w/ 51 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ year           : num  1966 1967 1968 1969 1970 ...\n $ weeks_reporting: num  50 49 52 49 51 51 45 45 45 46 ...\n $ count          : num  321 291 314 380 413 378 342 467 244 286 ...\n $ population     : num  3345787 3364130 3386068 3412450 3444165 ...\n\n\n\n#get a summary of data\nsummary(us_contagious_diseases)\n\n        disease            state            year      weeks_reporting\n Hepatitis A:2346   Alabama   :  315   Min.   :1928   Min.   : 0.00  \n Measles    :3825   Alaska    :  315   1st Qu.:1950   1st Qu.:31.00  \n Mumps      :1785   Arizona   :  315   Median :1975   Median :46.00  \n Pertussis  :2856   Arkansas  :  315   Mean   :1971   Mean   :37.38  \n Polio      :2091   California:  315   3rd Qu.:1990   3rd Qu.:50.00  \n Rubella    :1887   Colorado  :  315   Max.   :2011   Max.   :52.00  \n Smallpox   :1275   (Other)   :14175                                 \n     count          population      \n Min.   :     0   Min.   :   86853  \n 1st Qu.:     7   1st Qu.: 1018755  \n Median :    69   Median : 2749249  \n Mean   :  1492   Mean   : 4107584  \n 3rd Qu.:   525   3rd Qu.: 4996229  \n Max.   :132342   Max.   :37607525  \n                  NA's   :214       \n\n\n\n#determine the type of object us contagious diseases is\nclass(us_contagious_diseases)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-hepatitis-a-data",
    "href": "coding-exercise/coding-exercise.html#processing-hepatitis-a-data",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Assigning only Hepatitis A to a new object/variable called Hepatitis_A_data\nHepatitis_A_data &lt;- us_contagious_diseases %&gt;% filter(disease == \"Hepatitis A\")\n\n\n#get an overview of Hepatitis A data\nstr(Hepatitis_A_data)\n\n'data.frame':   2346 obs. of  6 variables:\n $ disease        : Factor w/ 7 levels \"Hepatitis A\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ state          : Factor w/ 51 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ year           : num  1966 1967 1968 1969 1970 ...\n $ weeks_reporting: num  50 49 52 49 51 51 45 45 45 46 ...\n $ count          : num  321 291 314 380 413 378 342 467 244 286 ...\n $ population     : num  3345787 3364130 3386068 3412450 3444165 ...\n\n\n\n# Summary of the new object Hepatitis_A_data\nsummary(Hepatitis_A_data)\n\n        disease            state           year      weeks_reporting\n Hepatitis A:2346   Alabama   :  46   Min.   :1966   Min.   : 0.00  \n Measles    :   0   Alaska    :  46   1st Qu.:1977   1st Qu.:33.00  \n Mumps      :   0   Arizona   :  46   Median :1988   Median :41.00  \n Pertussis  :   0   Arkansas  :  46   Mean   :1988   Mean   :38.72  \n Polio      :   0   California:  46   3rd Qu.:2000   3rd Qu.:48.00  \n Rubella    :   0   Colorado  :  46   Max.   :2011   Max.   :52.00  \n Smallpox   :   0   (Other)   :2070                                 \n     count           population      \n Min.   :    0.0   Min.   :  268476  \n 1st Qu.:   39.0   1st Qu.: 1226466  \n Median :  138.5   Median : 3294476  \n Mean   :  416.2   Mean   : 4894048  \n 3rd Qu.:  418.5   3rd Qu.: 5771780  \n Max.   :10821.0   Max.   :37607525"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plots-for-hepatitis-a",
    "href": "coding-exercise/coding-exercise.html#plots-for-hepatitis-a",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Creating the plot for count as a function of infant mortality for the year 2000\nggplot(data = Hepatitis_A_data, aes(x = population, y = count)) +\n  geom_point() +\n  labs(title = \"Hepatitis A Cases vs Population\",\n       x = \"population\",\n       y = \"count\") +\n  theme_minimal()"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#simple-fit-model-1",
    "href": "coding-exercise/coding-exercise.html#simple-fit-model-1",
    "title": "R Coding Exercise",
    "section": "",
    "text": "# Fit a linear model with life expectancy as the outcome and infant mortality as the predictor\nhepA_lm &lt;- lm(count ~ population, data = Hepatitis_A_data)\n\n# Display the summary of the first fit\nsummary(hepA_lm)\n\n\nCall:\nlm(formula = count ~ population, data = Hepatitis_A_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3050.0  -265.8   -52.3   107.2  9174.3 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -4.181e+00  1.971e+01  -0.212    0.832    \npopulation   8.589e-05  2.692e-06  31.906   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 709.8 on 2344 degrees of freedom\nMultiple R-squared:  0.3028,    Adjusted R-squared:  0.3025 \nF-statistic:  1018 on 1 and 2344 DF,  p-value: &lt; 2.2e-16\n\n\nObservation: We see that population is highly statistically significant and can conclude that it is a strong predictor of the number of Hepatitis A cases. Based off of the R-square value of 0.3028, we can say about 30.28% of the variability in the number of Hepatitis A cases can be explained by the population."
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Assignment #4: Data Exercise",
    "section": "",
    "text": "# Load necessary libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Set seed for reproducibility\nset.seed(456)\n\n# Define the number of samples\nn &lt;- 1000\n# Generate independent variables\neducation_years &lt;- rnorm(n, mean = 16, sd = 2)  # Years of education\nincome &lt;- rnorm(n, mean = 50000, sd = 15000)    # Annual income\nhours_worked_per_week &lt;- rnorm(n, mean = 40, sd = 5) # Hours worked per week\n\n# Generate dependent variables with associations\n# Job satisfaction influenced by income and hours worked\njob_satisfaction &lt;- 3 + 0.0001 * income - 0.02 * hours_worked_per_week + rnorm(n, mean = 0, sd = 1)\n\n# Physical activity level influenced by hours worked and education years\nphysical_activity_level &lt;- 10 - 0.1 * hours_worked_per_week + 0.2 * education_years + rnorm(n, mean = 0, sd = 2)\n\n# Create a data frame\nsynthetic_data &lt;- data.frame(\n  EducationYears = education_years,\n  Income = income,\n  HoursWorkedPerWeek = hours_worked_per_week,\n  JobSatisfaction = job_satisfaction,\n  PhysicalActivityLevel = physical_activity_level\n)"
  },
  {
    "objectID": "data-exercise/data-exercise.html#creating-a-synthetic-data",
    "href": "data-exercise/data-exercise.html#creating-a-synthetic-data",
    "title": "Assignment #4: Data Exercise",
    "section": "",
    "text": "# Load necessary libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Set seed for reproducibility\nset.seed(456)\n\n# Define the number of samples\nn &lt;- 1000\n# Generate independent variables\neducation_years &lt;- rnorm(n, mean = 16, sd = 2)  # Years of education\nincome &lt;- rnorm(n, mean = 50000, sd = 15000)    # Annual income\nhours_worked_per_week &lt;- rnorm(n, mean = 40, sd = 5) # Hours worked per week\n\n# Generate dependent variables with associations\n# Job satisfaction influenced by income and hours worked\njob_satisfaction &lt;- 3 + 0.0001 * income - 0.02 * hours_worked_per_week + rnorm(n, mean = 0, sd = 1)\n\n# Physical activity level influenced by hours worked and education years\nphysical_activity_level &lt;- 10 - 0.1 * hours_worked_per_week + 0.2 * education_years + rnorm(n, mean = 0, sd = 2)\n\n# Create a data frame\nsynthetic_data &lt;- data.frame(\n  EducationYears = education_years,\n  Income = income,\n  HoursWorkedPerWeek = hours_worked_per_week,\n  JobSatisfaction = job_satisfaction,\n  PhysicalActivityLevel = physical_activity_level\n)"
  },
  {
    "objectID": "data-exercise/data-exercise.html#display-and-explore-the-dataset-structure-and-summary",
    "href": "data-exercise/data-exercise.html#display-and-explore-the-dataset-structure-and-summary",
    "title": "Assignment #4: Data Exercise",
    "section": "Display and explore the dataset structure and summary:",
    "text": "Display and explore the dataset structure and summary:\n\n# Display the first few rows of the dataset\nhead(synthetic_data)\n\n  EducationYears   Income HoursWorkedPerWeek JobSatisfaction\n1       13.31296 47625.28           37.94398        7.059470\n2       17.24355 50282.21           38.61018        7.408164\n3       17.60175 57473.70           42.01285        7.582113\n4       13.22222 24871.05           42.28383        4.119334\n5       14.57129 95047.62           37.81186       12.012656\n6       15.35188 40866.52           46.82564        6.096372\n  PhysicalActivityLevel\n1             10.464398\n2              9.110109\n3              9.177621\n4             10.212566\n5             10.155518\n6              7.154206\n\n# Explore the data: structure and summary\nstr(synthetic_data)\n\n'data.frame':   1000 obs. of  5 variables:\n $ EducationYears       : num  13.3 17.2 17.6 13.2 14.6 ...\n $ Income               : num  47625 50282 57474 24871 95048 ...\n $ HoursWorkedPerWeek   : num  37.9 38.6 42 42.3 37.8 ...\n $ JobSatisfaction      : num  7.06 7.41 7.58 4.12 12.01 ...\n $ PhysicalActivityLevel: num  10.46 9.11 9.18 10.21 10.16 ...\n\nsummary(synthetic_data)\n\n EducationYears      Income      HoursWorkedPerWeek JobSatisfaction \n Min.   :10.07   Min.   : 7656   Min.   :22.80      Min.   : 2.305  \n 1st Qu.:14.72   1st Qu.:40996   1st Qu.:36.57      1st Qu.: 6.012  \n Median :16.11   Median :50370   Median :39.95      Median : 7.289  \n Mean   :16.11   Mean   :50943   Mean   :39.81      Mean   : 7.307  \n 3rd Qu.:17.54   3rd Qu.:61308   3rd Qu.:43.04      3rd Qu.: 8.528  \n Max.   :22.11   Max.   :95048   Max.   :59.07      Max.   :13.120  \n PhysicalActivityLevel\n Min.   : 4.127       \n 1st Qu.: 7.747       \n Median : 9.318       \n Mean   : 9.309       \n 3rd Qu.:10.744       \n Max.   :15.937       \n\n\n\nLet’s visualize the data:\n\nFirst let’s look at a few histograms of independent variables\n\n# Histograms of Education years\nggplot(synthetic_data, aes(x = EducationYears)) + \n  geom_histogram(binwidth = 1, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Education Years\", x = \"Years of Education\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nObservations: The histogram shows a bell-shaped curve which suggests that the Education Years variable is normally distributed. The peak of the histogram is centered around 16 years of education. Most of the data points falls between 12 and 20 years of education. Since, the histogram appears to be fairly symmetric, there are no significant skewness or outliers in the data.\n\n#Histogram of Income\nggplot(synthetic_data, aes(x = Income)) + \n  geom_histogram(binwidth = 5000, fill = \"green\", color = \"black\") +\n  labs(title = \"Histogram of Income\", x = \"Annual Income ($)\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nObservations: The histogram shows a bell-shaped curve which suggests that the Income variable is normally distributed. The peak of the histogram is centered around 50,000 Annual Income. Most of the data points falls between 20000 and 80000 annual income. Since, the histogram appears to be fairly symmetric, there are no significant skewness or outliers in the data.\n\n# Histogram of Hours Worked Per Week\"\nggplot(synthetic_data, aes(x = HoursWorkedPerWeek)) + \n  geom_histogram(binwidth = 2, fill = \"red\", color = \"black\") +\n  labs(title = \"Histogram of Hours Worked Per Week\", x = \"Hours Worked Per Week\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nObservations: The histogram shows a bell-shaped curve which suggests that the Hours worked per week variable is normally distributed. The peak of the histogram is centered around 40 hours per week. Most of the data points falls between 30 and 50 hours per week. Since, the histogram appears to be fairly symmetric, there are no significant skewness or outliers in the data.\n\n\nNow, let’s look at a few scatter plots to explore relationships between variables:\n\nggplot(synthetic_data, aes(x = Income, y = JobSatisfaction)) +\n  geom_point(color = \"blue\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(title = \"Scatter Plot of Job Satisfaction vs Income\", x = \"Income ($)\", y = \"Job Satisfaction\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nObservations: The scatter plot shows a positive linear relationship between job satisfaction and income. As income increases, job satisfaction tends to increase as well, which is also indicated by the upward sloping trend line.\n\nggplot(synthetic_data, aes(x = HoursWorkedPerWeek, y = JobSatisfaction)) +\n  geom_point(color = \"green\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(title = \"Scatter Plot of Job Satisfaction vs Hours Worked Per Week\", x = \"Hours Worked Per Week\", y = \"Job Satisfaction\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nObservations: The scatter plot shows a negative linear relationship between job satisfaction and hours worked per hour. As the number of hours worked per hour increases, job satisfaction tends to slightly decrease, which is also indicated by the downward sloping trend line.\n\nggplot(synthetic_data, aes(x = EducationYears, y = PhysicalActivityLevel)) +\n  geom_point(color = \"red\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(title = \"Scatter Plot of Physical Activity Level vs Education Years\", x = \"Years of Education\", y = \"Physical Activity Level\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nObservations: The scatter plot shows a positive linear relationship between physical activity level and years of education. As the number of education years increases, the physical activity tends to increase as well, which is also indicated by the upward sloping trend line.\n\nggplot(synthetic_data, aes(x = HoursWorkedPerWeek, y = PhysicalActivityLevel)) +\n  geom_point(color = \"purple\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(title = \"Scatter Plot of Physical Activity Level vs Hours Worked Per Week\", x = \"Hours Worked Per Week\", y = \"Physical Activity Level\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nObservations: The scatter plot shows a negative linear relationship between physical activity level and hours worked per hour. As the number of hours worked per hour increases, physical activity tends to slightly decrease, which is also indicated by the downward sloping trend line.\nFinally, let’s look at a visual summary of the relationships between the variables:\n\n# Correlation matrix\ncorrelation_matrix &lt;- synthetic_data %&gt;%\n  select(EducationYears, Income, HoursWorkedPerWeek, JobSatisfaction, PhysicalActivityLevel) %&gt;%\n  cor()\n\nprint(correlation_matrix)\n\n                      EducationYears       Income HoursWorkedPerWeek\nEducationYears           1.000000000  0.004948434         0.01659530\nIncome                   0.004948434  1.000000000         0.03151133\nHoursWorkedPerWeek       0.016595298  0.031511329         1.00000000\nJobSatisfaction          0.015953540  0.832537795        -0.04423735\nPhysicalActivityLevel    0.207776282 -0.047461368        -0.19617808\n                      JobSatisfaction PhysicalActivityLevel\nEducationYears             0.01595354            0.20777628\nIncome                     0.83253779           -0.04746137\nHoursWorkedPerWeek        -0.04423735           -0.19617808\nJobSatisfaction            1.00000000           -0.02666298\nPhysicalActivityLevel     -0.02666298            1.00000000\n\n\n\n# Visualize the correlation matrix\ncorrplot(correlation_matrix, method = \"circle\")\n\n\n\n\n\n\n\n\nHow to interpret the correlation matrix:\n\nDarker and larger circles indicate stronger correlations while light and smaller circles indicate weaker correlations.\nThe correlation range from -1 to 1 where 1 indicated positive correlation and -1 indicates a negative correlation.\n\nBased on the above methods of interpretation following are the observations:\n\nThere is moderate positive correlation between education years and income. Higher education levels tends to associate with higher income.\nThere is moderate positive correlation between income and job satisfaction. Higher incomes tends to associate with higher job satisfaction.\nThere is a slight negative correlation between hours worked per week and job satisfaction. As the number of hours worked increases, job satisfaction tends to decrease slightly.\nThere is a slight positive correlation between education years and physical activity level. More years of education are associated with higher physical activity levels.\nThere is a slight negative correlation between hours worked per week and physical activity level. More hours worked per week are associated with lower physical activity levels."
  },
  {
    "objectID": "data-exercise/data-exercise.html#lets-create-a-model-to-predict-job-satisfaction",
    "href": "data-exercise/data-exercise.html#lets-create-a-model-to-predict-job-satisfaction",
    "title": "Assignment #4: Data Exercise",
    "section": "Let’s create a model to predict Job Satisfaction:",
    "text": "Let’s create a model to predict Job Satisfaction:\n\n# Fit a linear model to predict Job Satisfaction based on Income and Hours Worked\nmodel1 &lt;- lm(JobSatisfaction ~ Income + HoursWorkedPerWeek, data = synthetic_data)\nsummary(model1)\n\n\nCall:\nlm(formula = JobSatisfaction ~ Income + HoursWorkedPerWeek, data = synthetic_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.0527 -0.6768 -0.0258  0.6180  3.7292 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         3.267e+00  2.787e-01  11.722  &lt; 2e-16 ***\nIncome              9.991e-05  2.084e-06  47.946  &lt; 2e-16 ***\nHoursWorkedPerWeek -2.638e-02  6.511e-03  -4.052 5.48e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9911 on 997 degrees of freedom\nMultiple R-squared:  0.6981,    Adjusted R-squared:  0.6975 \nF-statistic:  1153 on 2 and 997 DF,  p-value: &lt; 2.2e-16\n\n\nObservations: Both income and hours worked per hour significantly influence job satisfaction as their p-values are less than 0.001. 69.81% of the variance in job satisfaction is explained by the model."
  },
  {
    "objectID": "data-exercise/data-exercise.html#lets-create-a-model-to-predict-physical-activity-level",
    "href": "data-exercise/data-exercise.html#lets-create-a-model-to-predict-physical-activity-level",
    "title": "Assignment #4: Data Exercise",
    "section": "Let’s create a model to predict Physical Activity Level:",
    "text": "Let’s create a model to predict Physical Activity Level:\n\n# Fit a linear model to predict Physical Activity Level based on Education Years and Hours Worked\nmodel2 &lt;- lm(PhysicalActivityLevel ~ EducationYears + HoursWorkedPerWeek, data = synthetic_data)\nsummary(model2)\n\n\nCall:\nlm(formula = PhysicalActivityLevel ~ EducationYears + HoursWorkedPerWeek, \n    data = synthetic_data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-5.312 -1.379 -0.049  1.352  6.486 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         9.13292    0.73173  12.481  &lt; 2e-16 ***\nEducationYears      0.22388    0.03217   6.960 6.18e-12 ***\nHoursWorkedPerWeek -0.08621    0.01310  -6.583 7.42e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.994 on 997 degrees of freedom\nMultiple R-squared:  0.08303,   Adjusted R-squared:  0.08119 \nF-statistic: 45.14 on 2 and 997 DF,  p-value: &lt; 2.2e-16\n\n\nObservations: Both education years and hours worked per hour significantly influence physical activity as their p-values are less than 0.001. However, only 8.3% of the variance in physical activity is explained by the model, suggesting that there are other factors not included in the model that influence physical activity."
  },
  {
    "objectID": "data-exercise/data-exercise.html#finally-lets-compare-model-1-and-model-2",
    "href": "data-exercise/data-exercise.html#finally-lets-compare-model-1-and-model-2",
    "title": "Assignment #4: Data Exercise",
    "section": "Finally let’s compare Model 1 and Model 2:",
    "text": "Finally let’s compare Model 1 and Model 2:\n\n# Compare models using AIC (Akaike Information Criterion)\nAIC(model1, model2)\n\n       df      AIC\nmodel1  4 2825.029\nmodel2  4 4223.441\n\n\nObservations: Model 1 has a significantly lower AIC value compared to Model 2. hence based on the AIC values, Model 1 is preferred over Model 2 for explaining variation in the respective dependent variables."
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "Hello\nWelcome to my website and data analysis portfolio.\nIn this website you will find a little bit about myself and the various projects I am working on as part of DA6833 Practicum II class at UTSA.\n\nPlease use the Menu Bar above to look around."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Starter Analysis Report",
    "section": "",
    "text": "Savanna Torres contributed to this exercise.\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Starter Analysis Report",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Starter Analysis Report",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section.\nI added two column to exampledata2.xlsx\n\nEye Color - Color of the person’s eyes\nWaist size - Waist size of the person in inches"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Starter Analysis Report",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Starter Analysis Report",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Starter Analysis Report",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Starter Analysis Report",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Starter Analysis Report",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Linear Model Fit\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n251.466248\n33.902683\n7.417296\n0.0017632\n\n\nEyeColorBrown\n2.343799\n7.588352\n0.308868\n0.7728406\n\n\nEyeColorGreen\n19.445840\n11.761920\n1.653288\n0.1736157\n\n\nWaistSize\n-2.654631\n1.093009\n-2.428736\n0.0720793"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Starter Analysis Report",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\nFigure 2 shows a boxplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 2: Boxplot of Height by Eye Color.\n\n\n\n\n\nFigure 3 shows a scatter figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 3: Scatterplot of Weight vs. Waist Size."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Starter Analysis Report",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 3 shows a summary of a linear model fit.\n\n\n\n\nTable 3: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n177.3336897\n16.59480\n10.6860994\n0.0004344\n\n\nWeight\n0.0483406\n0.22107\n0.2186665\n0.8376135\n\n\nGenderM\n-14.3988101\n10.09446\n-1.4264077\n0.2269046\n\n\nGenderO\n-15.7009389\n11.90396\n-1.3189677\n0.2576206"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Starter Analysis Report",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Starter Analysis Report",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Starter Analysis Report",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/rinuthomas/Documents/PracticumII/rinuthomas_P2_portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/rinuthomas/Documents/PracticumII/rinuthomas_P2_portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/rinuthomas/Documents/PracticumII/rinuthomas_P2_portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                         `Allowed Values`\n  &lt;chr&gt;           &lt;chr&gt;                                         &lt;chr&gt;           \n1 Height          height in centimeters                         numeric value &gt;…\n2 Weight          weight in kilograms                           numeric value &gt;…\n3 Gender          identified gender (male/female/other)         M/F/O/NA        \n4 EyeColor        Color of the person's eyes(Brown, Blue,Green) Br/Bl/Gr        \n5 WaistSize       waist size in inches                          numeric value&gt;0…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height    &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155…\n$ Weight    &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender    &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\",…\n$ EyeColor  &lt;chr&gt; \"Brown\", \"Blue\", \"Green\", \"Green\", \"Brown\", \"Brown\", \"Brown\"…\n$ WaistSize &lt;dbl&gt; 32, 29, 27, 35, 34, 28, 38, 30, 33, 25, 30, NA, 32, 34\n\nsummary(rawdata)\n\n    Height              Weight          Gender            EyeColor        \n Length:14          Min.   :  45.0   Length:14          Length:14         \n Class :character   1st Qu.:  55.0   Class :character   Class :character  \n Mode  :character   Median :  70.0   Mode  :character   Mode  :character  \n                    Mean   : 602.7                                        \n                    3rd Qu.:  90.0                                        \n                    Max.   :7000.0                                        \n                    NA's   :1                                             \n   WaistSize    \n Min.   :25.00  \n 1st Qu.:29.00  \n Median :32.00  \n Mean   :31.31  \n 3rd Qu.:34.00  \n Max.   :38.00  \n NA's   :1      \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender EyeColor WaistSize\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;        &lt;dbl&gt;\n1 180        80 M      Brown           32\n2 175        70 O      Blue            29\n3 sixty      60 F      Green           27\n4 178        76 F      Green           35\n5 192        90 NA     Brown           34\n6 6          55 F      Brown           28\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEyeColor\n0\n1\n4\n5\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\nWaistSize\n1\n0.93\n31.31\n3.59\n25\n29\n32\n34\n38\n▃▇▃▇▂\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEyeColor\n0\n1\n4\n5\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nWaistSize\n1\n0.92\n31.67\n3.50\n25\n29.75\n32\n34\n38\n▂▇▃▇▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEyeColor\n0\n1\n4\n5\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nWaistSize\n1\n0.92\n31.67\n3.50\n25\n29.75\n32\n34\n38\n▂▇▃▇▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n10\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEyeColor\n0\n1\n4\n5\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n170.5\n13.12\n154\n158.5\n170.5\n179.5\n192\n▇▅▂▇▂\n\n\nWeight\n0\n1\n73.0\n19.87\n50\n55.0\n73.0\n87.5\n110\n▇▂▃▃▂\n\n\nWaistSize\n0\n1\n32.5\n2.99\n28\n30.5\n32.5\n34.0\n38\n▇▅▇▂▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n10\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEyeColor\n0\n1\n4\n5\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 2, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n170.5\n13.12\n154\n158.5\n170.5\n179.5\n192\n▇▅▂▇▂\n\n\nWeight\n0\n1\n73.0\n19.87\n50\n55.0\n73.0\n87.5\n110\n▇▂▃▃▂\n\n\nWaistSize\n0\n1\n32.5\n2.99\n28\n30.5\n32.5\n34.0\n38\n▇▅▇▂▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n8\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEyeColor\n0\n1\n4\n5\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 2, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n169.75\n10.96\n154\n163.50\n170.5\n178.50\n183\n▅▁▅▂▇\n\n\nWeight\n0\n1\n73.25\n20.36\n50\n55.00\n73.0\n82.50\n110\n▇▂▅▂▂\n\n\nWaistSize\n0\n1\n32.25\n3.33\n28\n29.75\n32.0\n34.25\n38\n▇▅▂▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Rinu Thomas Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  }
]